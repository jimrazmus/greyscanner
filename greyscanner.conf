# How often to scan spamdb - in seconds.  Don't make this too quick so
# we see MULTIPLE greylist attempts. This should be run more frequently
# than the greylist pass time, enough so you can get two scans in, but
# not much more.  A good suggestion is every 10 minutes, which allows
# for two runs every 30 minutes even if DNS lookups take a long time.
$SCAN_INTERVAL = 600;

# How many sockets will we use for DNS lookups in parallel.  A good
# suggestion which works for a busy site is 50.  Don't crank it too high
# or you'll hit maxfiles, etc.  Setting this to 0 will *disable* the DNS
# checks for MX and A records.
$DNS_SOCK_MAX = 50;

# Perfom count checks on hosts with more than this many tuples
$SUSPECT_TUPLES = 5;

# Count Checks - Maximum unique sender domains allowed from one host.
# If any host in the greylist has more than SUSPECT_TUPLES, and is
# sending from more than MAX_DOMAINS, they get trapped.
$MAX_DOMAINS = 3;

# Count Checks - Maximum unique sender/tuple ratio.  If any host in the
# greylist has more than SUSPECT_TUPLES, we count the number of unique
# senders in the tuple. If the number of unique senders divided by the
# number of tuples is greater than MAX_SENDERS_RATIO we trap the host.
$MAX_SENDERS_RATIO = 0.75;

# List of regular expressions that match bad recipient email addresses.
# The sending host will be greytrapped on match.  This is similar to
# spamd greytraps but implemented with regular expressions.  Old domains
# and mailservers make great additions to this list.
#@BAD = (
#	qr'@oldmailserver\.example\.com$'i,
#	qr'@example\.org$'i,
#);

# List of regular expressions that match good recipient email addresses.
# This list is tested before the BADRERCPT list and takes precedence.
#@GOOD = (
#	qr'^postmaster@goodmailserver\.example\.com$'i,
#);

# Trap everything that does not match against our GOOD list.  Setting
# this to 1 implies your GOOD list is an exhaustive, comprehensive, all
# inclusive list of regular expressions that match ALL your good
# addresses.  Here be dragons!
$COMPREHENSIVE = 0;

# External address checker.  If this file exists and is executable, we
# will run it for each recipient passing the recipient address as an
# argument on the command line.  If the program exits with a non-zero
# exit status, we trap the host sending to this address.  For example,
# if you maintain an ldap directory for all your users and write a quick
# script to validate an email address, you've got real power here by
# trapping any greylisted host that mails to a bogus address.
#$EXTERNAL_ADDRESS_CHECKER = '/etc/mail/greyscanner_checkrcpt';
